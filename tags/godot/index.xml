<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Godot on IntangibleMatter</title><link>https://intangiblematter.github.io/tags/godot/</link><description>Recent content in Godot on IntangibleMatter</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 27 Jan 2024 09:25:27 -0800</lastBuildDate><atom:link href="https://intangiblematter.github.io/tags/godot/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Make a Screenspace Visualshader in Godot</title><link>https://intangiblematter.github.io/posts/2024/01/25/how-to-make-a-screenspace-visualshader-in-godot/</link><pubDate>Thu, 25 Jan 2024 11:10:12 -0800</pubDate><guid>https://intangiblematter.github.io/posts/2024/01/25/how-to-make-a-screenspace-visualshader-in-godot/</guid><description>Click here to skip to the instructions.
So Godot Engine has a really cool shader system, allowing you to do stuff like change the way lighting works in both 2D and 3D using nothing but shaders, and it additionally has a powerful VisualShader system. VisualShaders, for those who don&amp;rsquo;t know, are shaders that use a Shader Graph system instead of pure code. I&amp;rsquo;m not huge on node-based programming systems, so I usually elect to (poorly) write a shader myself, but I&amp;rsquo;m working on a game jam with a larger team than I ever have before right now, and they wanted to use the ShaderV addon because of how many cool things it has.</description></item><item><title>Game Engines [ARCHIVE]</title><link>https://intangiblematter.github.io/posts/2021/07/12/game-engines-archive/</link><pubDate>Mon, 12 Jul 2021 10:01:29 -0700</pubDate><guid>https://intangiblematter.github.io/posts/2021/07/12/game-engines-archive/</guid><description>PLEASE NOTE: this is an archive from my original blog. It was my only post.
Before we begin: A game engine is a tool which is used to create games. It usually has a user interface and a scripting language (a specialized programming language unique to the engine) of some sort. A game _framework_ is a library of code which can be added to your code so it&amp;#39;s easier to make a game.</description></item></channel></rss>