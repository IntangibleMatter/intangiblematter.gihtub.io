<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>godot on IntangibleMatter</title><link>https://intangiblematter.github.io/tags/godot/</link><description>Recent content in godot on IntangibleMatter</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 12 Jul 2021 10:01:29 -0700</lastBuildDate><atom:link href="https://intangiblematter.github.io/tags/godot/index.xml" rel="self" type="application/rss+xml"/><item><title>Game Engines [ARCHIVE]</title><link>https://intangiblematter.github.io/posts/20210712/game-engines-archive/</link><pubDate>Mon, 12 Jul 2021 10:01:29 -0700</pubDate><guid>https://intangiblematter.github.io/posts/20210712/game-engines-archive/</guid><description>PLEASE NOTE: this is an archive from my original blog. It was my only post.
Before we begin: A game engine is a tool which is used to create games. It usually has a user interface and a scripting language (a specialized programming language unique to the engine) of some sort. A game _framework_ is a library of code which can be added to your code so it&amp;#39;s easier to make a game.</description></item></channel></rss>