<p class="code">
Before we begin:
A game engine is a tool which is used to create games. It usually has a user interface and a
scripting language (a specialized programming language unique to the engine) of some sort.
<br>
A game <i>framework</i> is a library of code which can be added to your code so it's easier to make a game. These generally require substantially more knowledge
and coding skill.

So, as many of you know, <a href="https://intangiblematter.itch.io">I like to make games. A lot. I've published four games (as of writing) and have created several more.
However, my choice of game engine hasn't always been consistent. The first engine I tried to use was, as is many people's first choice, Unity. My time with this engine was short,
and I had a great deal of trouble trying to grock how it works.

<h3>My issues with <a href="https://unity,com">Unity</a></h3>

<img src="/blog/images/game-engines-2021-07-12/unity.svg" class="s"/>Unity is a great engine... for some people. It's very powerful, and it's become the industry standard for games, if there is one. 
It's been used for many well-known and well-regarded games. Including one of my favourites, <a href="https://www.hollowknight.com/">Hollow Knight</a>. However, Unity is signifcantly better
optimized for 3D games than 2D games because when Unity was first released in 2005, many people were still writing their own game engines. However, this meant that if you were an
indie developer without a major studio, you were more likely to make a 2D game than a 3D one because it's much easier to create a 2D engine. Unity picked up steam by focussing on 3D.
Because Unity based itself on filling a gap in the market, it gained a large amount of success and is now responsible for around 45% of games being released<sup>[1]</sup>

However, despite all of these remarkable achievements, Unity never clicked for me. I had a few major issues that come to mind, with my first one being hoe Unity is designed for
3D games, not 2D. That's not to say it can't do 2D, it does it perfectly well (See Hollow Knight or Thomas Was Alone,) but its implementation of 2D... leaves a lot to be desired. How
Unity Engine implemented 2D was it took its 3D engine, and locked the camera into a fixed perspective. <i>There we go boss, 2D engine is done!</i> Now, this sounds like a perfectly fine implementation
on paper. It even has some benefits! For example, you can import a 3D model and it'll fit with everything else just fine! However, in practice, this makes it difficult to create 2D games for a
variety of reasons. The main ones I ran into were having to use 3D physics and the lack of a distinct type of measurement unit. These, combined with many other issues, such as
the need to import many different packages to achieve some extremely basic functionality (If you want text to look nice, add a package called TextMeshPro.)

But the thing that prevented me from really using this engine was the choice of scripting language- C#. Now, C# isn't a difficult language- if you have experience coding. But 12 year old me in 2018
was not an experienced coder. He was fresh out of <a href="https://scratch.mit.edu">Scratch</a> and taking a <a href="https://codecademy.com">Codecademy</a> Python course. All of this proved to be
a little much but in the end I did learn some basics of Game Engine functionality. But all of this kept me off Unity no matter how many times I tried to come back over the next year.

Then, in March 2020, the world went into lockdown.

With nothing better to do, I browsed Reddit. Then, one day, on r/gamedev I saw a post that Clickteam Fusion: standard edition (an engine I had been eyeing for a while but had never gotten
due to the over $100 price tag) had a free 3-month trial so people had something to do during the pandemic.

<h3><a href="https://clickteam.com">Fusion 2.5</a>: The Good, The Bad, and The Janky</h3>

<img src="/blog/images/game-engines-2021-07-12/fusion.svg" class="s"/> Clickteam Fusion 2.5 is a remarkably powerful engine. It is also an extremely easy to use engine. On top of all this, it is an
extremely frustrating engine. Knowing the first two, I excitedly downloaded it in near the end of March, and started creating my first game with it. This is where I discovered the Engine's strengths
and weaknesses. On the one hand, all you need to do to create game logic is to create a new row in its spreadsheet-style event editor, set up what triggers that row, and then set up what happens
when that row is triggered. And you can do all of this with just your mouse. Not a single line of code needs to be written. And this works great... for extremely simple games. Because the minute you
want to start adding enemy AI, or even multiple enemies for the plyer to collide with, you need to duplicate many rows of events, and change one thing each time. Now do this for everything in every
level and it starts to get tiring. The biggest game I made with the engine was a birthday gift for my mom. A small 2D platformer where you need to collect the letters of "HAPPY BIRTHDAY" while exploring
a small map. While doing this, I discoveredone of the most annoying things about fusion- no tilemaps. A tilemap is essentially a little sheet of tiles which can be selected and placed in a level.
From this tilemap you can select any tile, and place it. Every tile is stored in the one object, and this keeps things clean and easy to manage. Clickteam Fusion 2.5 does not have these. So when I
started creating a large level, I had to create a new object for each unique type of tile. So this got messy, and it got messy <i>FAST.</i> The game turned out simple and cute and fun. It is with this
engine that I entered my first game jam and published my first game, <a href="https://intangiblematter.itch.io/pack-the-pack/">Pack the Pack</a> for the LebGameDev Quarantine Jam. From this I
started to work on my next game. One which I never finished because around this time I watched some <a href="https://www.youtube.com/watch?v=mtIW9h1-bxk&list=PLmugv6_kd0qMgc7Bd2gO7cbfrdBIQrdpV">videos
by Miziziziziziziziziziz</a> or however the fuck many "iz"s he has in his name. And his engine of choice was a little open source project called Godot.


<h3>Why I Love <a href="https://godotengine.org">Godot</a></h3>
<img src="/blog/images/game-engines-2021-07-12/godotc.svg" class="s"/> As my time with the free version of Fusion grew shorter, its outdated interface, high costs, and complications all began to
make themselves more and more present. Because of this, I began to look for other engines. Thinking on what engine I could use that wasn't Fusion or Unity, I thought of what free engines I'd heard of,
and remembered


<h3>The <a href="https://love2d.org">LÃ–VE</a> Dilemma</h3>
<img src="/blog/images/game-engines-2021-07-12/lovec.svg" class="s"/>